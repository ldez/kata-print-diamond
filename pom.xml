<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.ldez</groupId>
    <artifactId>diamond-kata</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Diamond Kata</name>
    <description>http://claysnow.co.uk/recycling-tests-in-tdd</description>

    <properties>

        <!-- == Build Properties == -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <javac.encoding>UTF-8</javac.encoding>
        <javac.source.version>1.8</javac.source.version>
        <javac.target.version>1.8</javac.target.version>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ssZ</maven.build.timestamp.format>
        <prerequisites.maven.version>3.2.0</prerequisites.maven.version>

        <!-- == Dependencies == -->
        <lambda-behave.version>0.4</lambda-behave.version>
        <testng.version>6.9.6</testng.version>
        <junit.version>4.12</junit.version>
        <hamcrest.version>1.3</hamcrest.version>
        <assertj-core.version>3.1.0</assertj-core.version>
        <assertj-guava.version>2.0.0</assertj-guava.version>
        <truth.version>0.27</truth.version>
        <JUnitParams.version>1.0.4</JUnitParams.version>

        <cucumber.version>1.2.4</cucumber.version>

        <easymock.version>3.3.1</easymock.version>
        <powermock.version>1.6.2</powermock.version>
        <mockito.version>1.10.19</mockito.version>
        <objenesis.version>2.1</objenesis.version>
        <jmockit.version>1.18</jmockit.version>

        <guava.version>18.0</guava.version>
        <commons-collections4.version>4.0</commons-collections4.version>
        <commons-lang3.version>3.4</commons-lang3.version>

        <!-- == Plugins == -->
        <pitest.version>1.1.5</pitest.version>
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
        <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
        <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
        <maven-failsafe-plugin.version>2.18.1</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>
        <versions-maven-plugin.version>2.1</versions-maven-plugin.version>
        <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
    </properties>

    <prerequisites>
        <maven>${prerequisites.maven.version}</maven>
    </prerequisites>

    <dependencies>

        <!-- ===== jUnit ===== -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <!-- ==== Hamcrest ==== -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>

            <!-- ===== Test NG ===== -->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- ===== jUnit ===== -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <type>jar</type>
                <scope>test</scope>
            </dependency>

            <!-- ==== Hamcrest ==== -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- ==== Lambda-Behave ==== -->
            <dependency>
                <groupId>com.insightfullogic</groupId>
                <artifactId>lambda-behave</artifactId>
                <version>${lambda-behave.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- ===== JUnitParams ===== -->
            <dependency>
                <groupId>pl.pragmatists</groupId>
                <artifactId>JUnitParams</artifactId>
                <version>${JUnitParams.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- ===== AssertJ ===== -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj-core.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-guava</artifactId>
                <version>${assertj-guava.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- == Truth == -->
            <dependency>
                <groupId>com.google.truth</groupId>
                <artifactId>truth</artifactId>
                <version>${truth.version}</version>
            </dependency>

            <!-- ==== Mockito ==== -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>${objenesis.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- ==== EasyMock ==== -->
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${easymock.version}</version>
            </dependency>

            <!-- ===== PowerMock ===== -->
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-easymock</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-support</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-classloading-base</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-classloading-objenesis</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-core</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-reflect</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- ===== JMockit ===== -->
            <dependency>
                <groupId>org.jmockit</groupId>
                <artifactId>jmockit</artifactId>
                <version>${jmockit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jmockit</groupId>
                <artifactId>jmockit-coverage</artifactId>
                <version>${jmockit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- ===== Cucumber ===== -->
            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-java</artifactId>
                <version>${cucumber.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-junit</artifactId>
                <version>${cucumber.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- ===== Guava ===== -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- ===== Apache Commons ===== -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>

                <!-- ==== Compiler ==== -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <encoding>${javac.encoding}</encoding>
                        <source>${javac.source.version}</source>
                        <target>${javac.target.version}</target>
                        <showWarnings>true</showWarnings>
                        <showDeprecation>true</showDeprecation>
                        <optimize>true</optimize>
                        <!-- <debug>true</debug> -->
                    </configuration>
                </plugin>

                <!-- ==== Resources ==== -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>

                <!-- ==== JAR packager ==== -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <!-- <addMavenDescriptor>false</addMavenDescriptor> -->
                            <manifestEntries>
                                <Project-name>${project.name}</Project-name>
                                <Project-version>${project.version}</Project-version>
                                <build-date>${maven.build.timestamp}</build-date>
                                <revision>${buildNumber}</revision>
                                <branche>${scmBranch}</branche>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>

                <!-- ==== Versions ==== -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                </plugin>

                <!-- ==== Dependency ==== -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <configuration>
                        <ignoreNonCompile>true</ignoreNonCompile>
                    </configuration>
                </plugin>

                <!-- ==== Surefire (for execute UnitTest) ==== -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>

                <!-- ==== Failsate Surefire (for execute UnitTest) ==== -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>

                <!-- ==== PIT Mutant Testing ==== -->
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${pitest.version}</version>
                </plugin>

                <!-- ==== Enforcer ==== -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <configuration>
                        <rules>
                            <requireJavaVersion>
                                <version>[${javac.target.version},)</version>
                                <message>[ERROR] The currently supported version of Java is ${javac.target.version} or higher</message>
                            </requireJavaVersion>
                            <requireMavenVersion>
                                <version>[${prerequisites.maven.version},)</version>
                                <message>[ERROR] The currently supported version of Maven is ${prerequisites.maven.version} or higher</message>
                            </requireMavenVersion>
                            <DependencyConvergence />
                            <bannedDependencies>
                                <excludes>
                                    <exclude>*:commons-logging</exclude>
                                    <exclude>*:log4j</exclude>
                                </excludes>
                                <message>[ERROR] Best Practice is to always use SLF4J !</message>
                            </bannedDependencies>
                            <requirePluginVersions>
                                <banLatest>true</banLatest>
                                <banRelease>true</banRelease>
                                <banSnapshots>true</banSnapshots>
                                <phases>clean,deploy,site</phases>
                                <message>[ERROR] Best Practice is to always define plugin versions !</message>
                            </requirePluginVersions>
                        </rules>
                        <fail>true</fail>
                    </configuration>
                    <executions>
                        <execution>
                            <id>enforce-struture</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.assertj</groupId>
                                        <artifactId>assertj-assertions-generator-maven-plugin</artifactId>
                                        <versionRange>[0,)</versionRange>
                                        <goals>
                                            <goal>generate-assertions</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>analyze</id>
            <!-- run with goal : validate -->
            <!-- or versions:display-dependency-updates versions:display-plugin-updates dependency:analyze -->
            <build>
                <plugins>
                    <!-- ==== Versions ==== -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>display-dependency-updates</goal>
                                    <goal>display-plugin-updates</goal>
                                    <goal>display-property-updates</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- ==== Dependency ==== -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>analyze</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>